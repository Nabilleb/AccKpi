<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add New Task</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="/styles/task.css">
</head>
<body>
  <div class="form-container">
    <div class="form-header">
      <h1>
        <i class="fas fa-plus-circle"></i>
        Edit Task
      </h1>
    </div>
    
   <form action="/update-task/<%= task.TaskID %>" method="POST" class="form-grid">
  <div class="form-group">
    <label for="TaskName" class="required-field">Task Name</label>
    <input type="text" id="TaskName" name="TaskName" required value="<%= task.TaskName %>">
  </div>

  <div class="form-group">
    <label for="TaskPlanned" class="required-field">Task Description</label>
    <input type="text" id="TaskPlanned" name="TaskPlanned" required value="<%= task.TaskPlanned %>">
  </div>

  <div class="form-group">
    <label for="IsDateFixed">Fixed Deadline</label>
    <select id="IsDateFixed" name="IsDateFixed">
      <option value="1" <%= task.IsDateFixed ? 'selected' : '' %>>Yes</option>
      <option value="0" <%= !task.IsDateFixed ? 'selected' : '' %>>No</option>
    </select>
  </div>

 

  <input type="hidden" name="TaskID" value="<%= task.TaskID %>">

  <div class="form-actions">
    <button type="button" class="btn btn-secondary" onclick="window.history.back()">Cancel</button>
    <button type="submit" class="btn btn-primary">Update Task</button>
  </div>
</form>

  </div>

  <script>
    // Enhance the form with dynamic behavior
    document.addEventListener('DOMContentLoaded', function() {
      const isDateFixedSelect = document.getElementById('IsDateFixed');
      const plannedDateInput = document.getElementById('PlannedDate');
      
      // Set default datetime to now (rounded to nearest 15 minutes)
      const now = new Date();
      const minutes = Math.ceil(now.getMinutes() / 15) * 15;
      now.setMinutes(minutes);
      now.setSeconds(0);
      
      // Format for datetime-local input
      const year = now.getFullYear();
      const month = String(now.getMonth() + 1).padStart(2, '0');
      const day = String(now.getDate()).padStart(2, '0');
      const hours = String(now.getHours()).padStart(2, '0');
      const mins = String(now.getMinutes()).padStart(2, '0');
      
      plannedDateInput.value = `${year}-${month}-${day}T${hours}:${mins}`;
      
      // Toggle date field based on IsDateFixed selection
   
      
      isDateFixedSelect.addEventListener('change', toggleDateField);
      toggleDateField(); // Initialize
      
      // Form validation
      const form = document.querySelector('form');
      form.addEventListener('submit', function(e) {
        let isValid = true;
        
        // Check required fields
        document.querySelectorAll('[required]').forEach(field => {
          if (!field.value.trim()) {
            field.style.borderColor = 'var(--danger)';
            isValid = false;
          }
        });
        
        if (!isValid) {
          e.preventDefault();
          alert('Please fill in all required fields');
        }
      });
      
      // Clear error state when typing
      document.querySelectorAll('input, select').forEach(field => {
        field.addEventListener('input', function() {
          if (this.value.trim()) {
            this.style.borderColor = '';
          }
        });
      });
    });
  </script>
</body>
</html>