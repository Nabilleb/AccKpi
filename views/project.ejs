<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add New Project</title>
<link rel="stylesheet" href="/css/bootstrap.min.css">
<link rel="stylesheet" href="/css/all.min.css">
  <style>
    :root {
      --primary: #3b82f6;
      --primary-light: #dbeafe;
      --primary-dark: #2563eb;
      --secondary: #64748b;
      --success: #10b981;
      --danger: #ef4444;
      --warning: #f59e0b;
      --text: #1e293b;
      --text-light: #64748b;
      --border: #e2e8f0;
      --background: #f8fafc;
      --white: #ffffff;
      --radius-sm: 4px;
      --radius-md: 8px;
      --radius-lg: 12px;
      --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
      --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
      --transition: all 0.2s ease;
    }

    body {
      font-family: 'Inter', system-ui, -apple-system, sans-serif;
      background-color: var(--background);
      -webkit-font-smoothing: antialiased;
    }

    .project-form-container {
      max-width: 800px;
      margin: 2rem auto;
      padding: 2rem;
      background-color: var(--white);
      border-radius: var(--radius-lg);
      box-shadow: var(--shadow-md);
    }

    .form-header {
      margin-bottom: 2rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid var(--border);
    }

    .form-header h2 {
      color: var(--primary-dark);
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }

    .form-header i {
      color: var(--primary);
    }

    .form-label {
      font-weight: 500;
      margin-bottom: 0.5rem;
      color: var(--text);
    }

    .form-control, .form-select {
      padding: 0.75rem 1rem;
      border-radius: var(--radius-sm);
      border: 1px solid var(--border);
      transition: var(--transition);
    }

    .form-control:focus, .form-select:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 0.25rem rgba(59, 130, 246, 0.25);
    }

    .btn-primary {
      background-color: var(--primary);
      border-color: var(--primary);
      padding: 0.75rem 1.5rem;
      font-weight: 500;
      transition: var(--transition);
    }

    .btn-primary:hover {
      background-color: var(--primary-dark);
      border-color: var(--primary-dark);
      transform: translateY(-1px);
    }

    .btn-primary:active {
      transform: translateY(0);
    }

    .btn i {
      margin-right: 0.5rem;
    }

    /* Custom select dropdown arrow */
    .form-select {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
      background-repeat: no-repeat;
      background-position: right 0.75rem center;
      background-size: 16px 12px;
    }

    /* Toast notification */
    .toast-container {
      position: fixed;
      top: 1rem;
      right: 1rem;
      z-index: 1100;
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
      .project-form-container {
        margin: 1rem;
        padding: 1.5rem;
      }
    }
  </style>
</head>
<body>
  <div class="project-form-container">
    <div class="form-header">
      <h2><i class="fas fa-folder-plus"></i> Add New Project</h2>
    </div>

    <% if (typeof success !== 'undefined') { %>
      <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>
        <%= success %>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>
    <% } %>

    <% if (typeof error !== 'undefined') { %>
      <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>
        <%= error %>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>
    <% } %>

    <form id="addProjectForm" action="/projects/add" method="POST">
      <div class="mb-4">
        <label for="projectName" class="form-label">Project Name</label>
        <input type="text" class="form-control" id="projectName" name="projectName" required
               placeholder="Enter project name">
        <div class="invalid-feedback">Please provide a project name.</div>
      </div>

      <div class="mb-4">
        <label for="packageID" class="form-label">Select Package</label>
        <select class="form-select" id="packageID" name="packageID" required>
          <option value="" selected disabled>Choose a package...</option>
          <% packages.forEach(pkg => { %>
            <option value="<%= pkg.PkgeID %>" data-duration="<%= pkg.Duration %>">
              <%= pkg.PkgeName %> - <%= pkg.Division %> (Duration: <%= pkg.Duration %> days)
            </option>
          <% }) %>
        </select>
        <div class="invalid-feedback">Please select a package.</div>
      </div>

      <div class="mb-4">
        <label for="processID" class="form-label">Select Process</label>
        <select class="form-select" id="processID" name="processID" required>
          <option value="" selected disabled>Choose a process...</option>
          <% processes.forEach(proc => { %>
            <option value="<%= proc.NumberOfProccessID %>">
              <%= proc.ProcessName %> <% if (proc.processDesc) { %> - <%= proc.processDesc %> <% } %>
            </option>
          <% }) %>
        </select>
        <div class="invalid-feedback">Please select a process.</div>
      </div>

      <div class="d-flex justify-content-between align-items-center mt-4 pt-3 border-top">
        <button type="button" class="btn btn-outline-secondary" onclick="window.history.back()">
          <i class="fas fa-arrow-left"></i> Cancel
        </button>
        <button type="submit" class="btn btn-primary" id="submitBtn">
          <i class="fas fa-plus-circle"></i> Add Project
        </button>
      </div>
    </form>
  </div>

  <!-- Toast Notification -->
  <div class="toast-container">
    <div id="successToast" class="toast align-items-center text-white bg-success" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="d-flex">
        <div class="toast-body">
          <i class="fas fa-check-circle me-2"></i>
          <span id="toastMessage">Project added successfully!</span>
        </div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('addProjectForm');
      const submitBtn = document.getElementById('submitBtn');
      const successToast = new bootstrap.Toast(document.getElementById('successToast'));
      
      // Real-time validation
      form.addEventListener('submit', function(e) {
        if (!form.checkValidity()) {
          e.preventDefault();
          e.stopPropagation();
        }
        
        form.classList.add('was-validated');
      });

      // Enhanced form submission
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        if (!form.checkValidity()) {
          form.classList.add('was-validated');
          return;
        }

        // Set loading state
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i> Processing...';

        try {
          const formData = new FormData(form);
          const response = await fetch(form.action, {
            method: 'POST',
            body: formData
          });

          if (response.ok) {
            // Show success toast
            document.getElementById('toastMessage').textContent = 'Project added successfully!';
            successToast.show();
            
            // Reset form after successful submission
            setTimeout(() => {
              form.reset();
              form.classList.remove('was-validated');
              submitBtn.disabled = false;
              submitBtn.innerHTML = '<i class="fas fa-plus-circle me-2"></i> Add Project';
            }, 1500);
          } else {
            const error = await response.json();
            throw new Error(error.message || 'Failed to add project');
          }
        } catch (error) {
          // Show error message (you could add an error toast as well)
          alert(error.message);
          submitBtn.disabled = false;
          submitBtn.innerHTML = '<i class="fas fa-plus-circle me-2"></i> Add Project';
        }
      });

      // Auto-focus first field
      document.getElementById('projectName').focus();
    });
  </script>
</body>
</html>